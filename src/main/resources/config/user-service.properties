#Here, spring.jpa.hibernate.ddl-auto can be none, update, create, create-drop, refer to the Hibernate documentation for details.
#
#none This is the default for MySQL, no change to the database structure.
#
#update Hibernate changes the database according to the given Entity structures.
#
#create Creates the database every time, but donâ€™t drop it when close.
#
#create-drop Creates the database then drops it when the SessionFactory closes.
#spring.jpa.hibernate.ddl-auto=create
#This is where the user for the mysql database is stored along with the url
spring.datasource.url=jdbc:mysql://localhost:3306/db_user?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=tsuser_db
spring.datasource.password=password

spring.jpa.hibernate.ddl-auto=update
# Server is not understanding that the dialect is MySQL - Added this line (Dan)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

# enable all endpoints for actuator
management.endpoints.web.exposure.include=*

# used for token checking
auth0.issuer=https://blakehowe96.au.auth0.com/


# used for auth and management api
auth0.clientId=xXz4FrF4u9ryX0SbonX0Nge2Q2QrKR4S
auth0.clientSecret=ENC(mLSmr+RX29yAKUKLPoUwiXhqJizgpqF3TEV4MHzLSSsrJsGP9+ToBXtzW7GHOT93FgkV519CS5uVem1RWPQNafF3t2fGbj7gPxE6tofMg60=)
auth0.audience=https://blakehowe96.au.auth0.com/api/v2/
auth0.domain=blakehowe96.au.auth0.com